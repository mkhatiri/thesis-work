@article{SIMGRID,
  TITLE = {{Versatile, Scalable, and Accurate Simulation of Distributed Applications and Platforms}},
  AUTHOR = {Casanova, Henri and Giersch, Arnaud and Legrand, Arnaud and Quinson, Martin and Suter, Fr{\'e}d{\'e}ric},
  URL = {https://hal.inria.fr/hal-01017319},
  JOURNAL = {{Journal of Parallel and Distributed Computing}},
  PUBLISHER = {{Elsevier}},
  VOLUME = {74},
  NUMBER = {10},
  PAGES = {2899-2917},
  YEAR = {2014},
  MONTH = Jun,
  DOI = {10.1016/j.jpdc.2014.06.008},
  PDF = {https://hal.inria.fr/hal-01017319/file/simgrid3-journal.pdf},
  HAL_ID = {hal-01017319},
  HAL_VERSION = {v2},
}
 	
@article{simulator,
  author    = {Mohammed Khatiri and
               Denis Trystram and
               Fr{\'{e}}d{\'{e}}ric Wagner},
  title     = {Work Stealing Simulator},
  journal   = {CoRR},
  volume    = {abs/1910.02803},
  year      = {2019},
  url       = {http://arxiv.org/abs/1910.02803},
  archivePrefix = {arXiv},
  eprint    = {1910.02803},
}

@article{Paje2000,
    title = "Pajé, an interactive visualization tool for tuning multi-threaded parallel applications ",
    journal = "Parallel Computing ",
    volume = "26",
    number = "10",
    pages = "1253 - 1274",
    year = "2000",
    note = "",
    issn = "0167-8191",
    doi = "http://dx.doi.org/10.1016/S0167-8191(00)00010-7",
    url = "http://www.sciencedirect.com/science/article/pii/S0167819100000107",
    author = "J. Chassin de Kergommeaux and B. Stein and P.E. Bernard",
    keywords = "Performance and correctness debugging",
    keywords = "Parallel program visualization",
    keywords = "Threads",
    keywords = "Interactivity",
    keywords = "Scalability",
    keywords = "Modularity ",
    abstract = "This paper describes Pajé, an interactive visualization tool for displaying the execution of parallel applications where a potentially large number of communicating threads of various life-times execute on each node of a distributed memory parallel system. Pajé is capable of representing a wide variety of interactions between threads. The main characteristics of Pajé, interactivity and scalability, are exemplified by the performance tuning of a molecular dynamics application. In order to be easily extensible, the architecture of the system was based on components which are connected in a data flow graph to produce a given visualization tool. Innovative components were designed, in addition to “classical” components existing in similar visualization systems, to support scalability and interactivity. "

}

@INPROCEEDINGS{Agrawal,
	author={K. Agrawal and C. E. Leiserson and J. Sukha},
	booktitle={2010 IEEE International Symposium on Parallel Distributed Processing (IPDPS)},
	title={Executing task graphs using work-stealing},
	year={2010},
	pages={1-12},
	keywords={directed graphs;divide and conquer methods;dynamic programming;multi-threading;software libraries;specification languages;Cilk++ language;NABBIT;Smith-Waterman algorithm;constant in-degree;divide-and-conquer implementation;irregular dynamic program;multithreaded programming language;out-degree;static task graph;task-graph node;two-dimensional grid;work-stealing library;Computer interfaces;Computer languages;Concurrent computing;Dynamic scheduling;Heuristic algorithms;Libraries;Multithreading;Parallel processing;Processor scheduling;Runtime;Cilk;dag;dynamic multithreading;parallel computing;work/span analysis},
	doi={10.1109/IPDPS.2010.5470403},
	ISSN={1530-2075},
	month={April},
}

@article{Gast2010,
	author = {Gast, Nicolas and Bruno, Gaujal},
	title = {A Mean Field Model of Work Stealing in Large-scale Systems},
	journal = {SIGMETRICS Perform. Eval. Rev.},
	issue_date = {June 2010},
	volume = {38},
	number = {1},
	month = jun,
	year = {2010},
	issn = {0163-5999},
	pages = {13--24},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/1811099.1811042},
	doi = {10.1145/1811099.1811042},
	acmid = {1811042},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {grid computing, load balancing, mean field},
} 



@unpublished{MCMCA,
	volume = {2},
	number = {1},
	title = {An analytical model of multi-core multi-cluster architecture (MCMCA)},
	author = {Norhazlina Hamid and Robert John Walters and Gary Brian  Wills },
	year = {2015},
	pages = {1--12},
	journal = {Open Journal of Cloud Computing (OJCC)},
	url = {http://eprints.soton.ac.uk/374744/},
	abstract = {Multi-core clusters have emerged as an important contribution in computing technology for provisioning additional processing power in high performance computing and communications. Multi-core architectures are proposed for their capability to provide higher performance without increasing heat and power usage, which is the main concern in a single-core processor. This paper introduces analytical models of a new architecture for large-scale multi-core clusters to improve the communication performance within the interconnection network. The new architecture will be based on a multi - cluster architecture containing clusters of multi-core processors}
}

@book{CosnardTrystram92,
  author    = {Michel Cosnard and
               Denis Trystram},
  title     = {Parallel algorithms and architectures},
  publisher = {International Thomson},
  year      = {1995}
}


@Article{Denis2013,
	author="Tchiboukdjian, Marc
	and Gast, Nicolas
	and Trystram, Denis",
	title="Decentralized list scheduling",
	journal="Annals of Operations Research",
	year="2013",
	volume="207",
	number="1",
	pages="237--259",
	abstract="Classical list scheduling is a very popular and efficient technique for scheduling jobs for parallel and distributed platforms. It is inherently centralized. However, with the increasing number of processors, the cost for managing a single centralized list becomes too prohibitive. A suitable approach to reduce the contention is to distribute the list among the computational units: each processor only has a local view of the work to execute. Thus, the scheduler is no longer greedy and standard performance guarantees are lost.",
	issn="1572-9338",
	doi="10.1007/s10479-012-1149-7",
	url="http://dx.doi.org/10.1007/s10479-012-1149-7"
}


@INPROCEEDINGS{MultiCoreClusterArchitectur2015,
	author={N. Hamid and R. Walters and G. Wills},
	booktitle={2015 17th UKSim-AMSS International Conference on Modelling and Simulation (UKSim)},
	title={Simulation and Mathematical Analysis of Multi-core Cluster Architecture},
	year={2015},
	pages={476-481},
	keywords={multiprocessing systems;multiprocessor interconnection networks;parallel processing;cost-benefit ratio;high performance computing;interconnection network;multicore multicluster architecture;single-core cluster;single-core processor;Analytical models;Communication networks;Mathematical model;Multicore processing;Multiprocessor interconnection;Program processors;cluster computing;interconnection network;multi-cluster;multi-core cluster;network simulation},
	doi={10.1109/UKSim.2015.54},
	month={March},
}

@article{Leiserson1998,
	author = {Frigo, Matteo and Leiserson, Charles E. and Randall, Keith H.},
	title = {The Implementation of the Cilk-5 Multithreaded Language},
	journal = {SIGPLAN Not.},
	issue_date = {May 1998},
	volume = {33},
	number = {5},
	month = may,
	year = {1998},
	issn = {0362-1340},
	pages = {212--223},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/277652.277725},
	doi = {10.1145/277652.277725},
	acmid = {277725},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {critical path, multithreading, parallel computing, programming language, runtime system, work},
} 

@inproceedings{Leiserson2009,
	author = {Leiserson, Charles E.},
	title = {The Cilk++ Concurrency Platform},
	booktitle = {Proceedings of the 46th Annual Design Automation Conference},
	series = {DAC '09},
	year = {2009},
	isbn = {978-1-60558-497-3},
	location = {San Francisco, California},
	pages = {522--527},
	numpages = {6},
	url = {http://doi.acm.org/10.1145/1629911.1630048},
	doi = {10.1145/1629911.1630048},
	acmid = {1630048},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Amdahl's Law, dag model, hyperobject, multicore programming, multithreading, parallel programming, parallelism, race detection, reducer, span, speedup, work},
} 

@INPROCEEDINGS{Robison2008,
	author={A. Robison and M. Voss and A. Kukanov},
	booktitle={2008 IEEE International Symposium on Parallel and Distributed Processing},
	title={Optimization via Reflection on Work Stealing in TBB},
	year={2008},
	pages={1-8},
	keywords={C++ language;multi-threading;scheduling;shared memory systems;software libraries;C++ library;Intel;Threading Building Blocks;parallel programming;task stealing;work stealing;work-stealing scheduler;Delay;Gold;Grain size;Inspection;Kernel;Libraries;Parallel programming;Reflection;Scheduling;Tree data structures},
	doi={10.1109/IPDPS.2008.4536188},
	ISSN={1530-2075},
	month={April},
}

@inproceedings{Kaapi2007,
	author = {Gautier, Thierry and Besseron, Xavier and Pigeon, Laurent},
	title = {KAAPI: A Thread Scheduling Runtime System for Data Flow Computations on Cluster of Multi-processors},
	booktitle = {Proceedings of the 2007 International Workshop on Parallel Symbolic Computation},
	series = {PASCO '07},
	year = {2007},
	isbn = {978-1-59593-741-4},
	location = {London, Ontario, Canada},
	pages = {15--23},
	numpages = {9},
	url = {http://doi.acm.org/10.1145/1278177.1278182},
	doi = {10.1145/1278177.1278182},
	acmid = {1278182},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {cluster, data flow, multi-core, multi-processor, work-stealing},
} 

@article{Blumofe1999,
	author = {Blumofe, Robert D. and Leiserson, Charles E.},
	title = {Scheduling Multithreaded Computations by Work Stealing},
	journal = {J. ACM},
	issue_date = {Sept. 1999},
	volume = {46},
	number = {5},
	month = sep,
	year = {1999},
	issn = {0004-5411},
	pages = {720--748},
	numpages = {29},
	url = {http://doi.acm.org/10.1145/324133.324234},
	doi = {10.1145/324133.324234},
	acmid = {324234},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {critical-path length, multiprocessor, multithreading, randomized algorithm, thread scheduling, work stealing},
} 

@INPROCEEDINGS{Arora2001,
	author = {Nimar S. Arora and Robert D. Blumofe and C. Greg Plaxton},
	title = {Thread Scheduling for Multiprogrammed Multiprocessors},
	booktitle = {In Proceedings of the Tenth Annual ACM Symposium on Parallel Algorithms and Architectures (SPAA), Puerto Vallarta},
	year = {2001},
	pages = {119--129}
}

@Article{Bender2002,
	author="Bender, Michael A.
	and Rabin, Michael O.",
	title="Online Scheduling of Parallel Programs on Heterogeneous Systems with Applications to Cilk",
	journal="Theory of Computing Systems",
	year="2002",
	volume="35",
	number="3",
	pages="289--304",
	abstract="We study the problem of executing parallel programs, in particular Cilk programs, on a collection of processors of different speeds. We consider a model in which each processor maintains an estimate of its own speed, where communication between processors has a cost, and where all scheduling must be online. This problem has been considered previously in the fields of asynchronous parallel computing and scheduling theory. Our model is a bridge between the assumptions in these fields. We provide a new more accurate analysis of an old scheduling algorithm called the maximum utilization scheduler . Based on this analysis, we generalize this scheduling policy and define the high utilization scheduler . We next focus on the Cilk platform and introduce a new algorithm for scheduling Cilk multithreaded parallel programs on heterogeneous processors. This scheduler is inspired by the high utilization scheduler and is modified to fit in a Cilk context. A crucial aspect of our algorithm is that it keeps the original spirit of the Cilk scheduler. In fact, when our new algorithm runs on homogeneous processors, it exactly mimics the dynamics of the original Cilk scheduler.",
	issn="1433-0490",
	doi="10.1007/s00224-002-1055-5",
	url="http://dx.doi.org/10.1007/s00224-002-1055-5"
}

@Inbook{Sanders1999,
	author="Sanders, Peter",
	title="Asynchronous Random Polling Dynamic Load Balancing",
	bookTitle="Algorithms and Computation: 10th International Symposium, ISAAC'99 Chennai, India, December 16--18, 1999 Proceedings",
	year="1999",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="37--48",
	isbn="978-3-540-46632-1",
	doi="10.1007/3-540-46632-0_5",
	url="http://dx.doi.org/10.1007/3-540-46632-05"
}

@article{Berenbrink2003,
	author = {Petra Berenbrink and Tom Friedetzky and Leslie Ann Goldberg},
	title = {The Natural Work-Stealing Algorithm is Stable},
	journal = {SIAM Journal on Computing},
	volume = {32},
	number = {5},
	pages = {1260-1279},
	year = {2003},
	doi = {10.1137/S0097539701399551},
	URL = {http://dx.doi.org/10.1137/S0097539701399551},
	eprint = {http://dx.doi.org/10.1137/S0097539701399551}
}

@inproceedings{Mitzenmache1998,
	author = {Mitzenmacher, Michael},
	title = {Analyses of Load Stealing Models Based on Differential Equations},
	booktitle = {Proceedings of the Tenth Annual ACM Symposium on Parallel Algorithms and Architectures},
	series = {SPAA '98},
	year = {1998},
	isbn = {0-89791-989-0},
	location = {Puerto Vallarta, Mexico},
	pages = {212--221},
	numpages = {10},
	url = {http://doi.acm.org/10.1145/277651.277687},
	doi = {10.1145/277651.277687},
	acmid = {277687},
	publisher = {ACM},
	address = {New York, NY, USA},
} 

@inproceedings{Lueling1993,
	author = {L\"{u}ling, Reinhard and Monien, Burkhard},
	title = {A Dynamic Distributed Load Balancing Algorithm with Provable Good Performance},
	booktitle = {Proceedings of the Fifth Annual ACM Symposium on Parallel Algorithms and Architectures},
	series = {SPAA '93},
	year = {1993},
	isbn = {0-89791-599-2},
	location = {Velen, Germany},
	pages = {164--172},
	numpages = {9},
	url = {http://doi.acm.org/10.1145/165231.165252},
	doi = {10.1145/165231.165252},
	acmid = {165252},
	publisher = {ACM},
	address = {New York, NY, USA},
} 

@inproceedings{Rudolph1991,
	author = {Rudolph, Larry and Slivkin-Allalouf, Miriam and Upfal, Eli},
	title = {A Simple Load Balancing Scheme for Task Allocation in Parallel Machines},
	booktitle = {Proceedings of the Third Annual ACM Symposium on Parallel Algorithms and Architectures},
	series = {SPAA '91},
	year = {1991},
	isbn = {0-89791-438-4},
	location = {Hilton Head, South Carolina, USA},
	pages = {237--245},
	numpages = {9},
	url = {http://doi.acm.org/10.1145/113379.113401},
	doi = {10.1145/113379.113401},
	acmid = {113401},
	publisher = {ACM},
	address = {New York, NY, USA},
} 

@inproceedings{Muller2106,
	author = {Muller, Stefan K. and Acar, Umut A.},
	title = {Latency-Hiding Work Stealing: Scheduling Interacting Parallel Computations with Work Stealing},
	booktitle = {Proceedings of the 28th ACM Symposium on Parallelism in Algorithms and Architectures},
	series = {SPAA '16},
	year = {2016},
	isbn = {978-1-4503-4210-0},
	location = {Pacific Grove, California, USA},
	pages = {71--82},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/2935764.2935793},
	doi = {10.1145/2935764.2935793},
	acmid = {2935793},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {latency, latency hiding, parallel computing, work stealing},
} 

@INPROCEEDINGS{Shigang2013,
	author={S. Li and J. Hu and X. Cheng and C. Zhao},
	booktitle={2013 21st Euromicro International Conference on Parallel, Distributed, and Network-Based Processing},
	title={Asynchronous Work Stealing on Distributed Memory Systems},
	year={2013},
	pages={198-202},
	keywords={C language;distributed memory systems;parallel programming;resource allocation;32 nodes Xeon X5650 cluster;AsynchWS strategy;UPC;asynchronous work stealing strategy;distributed memory systems;dynamic load balancing;irregular applications;local residual tasks;nonblocking one-sided communication;profiling information;state-of-the-art strategies;unified parallel C;Grain size;Instruction sets;Kernel;Libraries;Load management;Parallel processing;Runtime;UPC;asynchronous work stealing;distributed memory;task granularity},
	doi={10.1109/PDP.2013.35},
	ISSN={1066-6192},
	month={Feb},
}

@INPROCEEDINGS{swann2014,
	author={S. Perarnau and M. Sato},
	booktitle={2014 IEEE 28th International Parallel and Distributed Processing Symposium},
	title={Victim Selection and Distributed Work Stealing Performance: A Case Study},
	year={2014},
	pages={659-668},
	keywords={distributed memory systems;performance evaluation;resource allocation;shared memory systems;K computer;UTS benchmark;communication latency;distributed memory systems;distributed work stealing performance;dynamic load balancing;performance evaluation;performance metric;shared memory systems;victim selection function;work stealing scheduler;Benchmark testing;Blades;Computers;Load management;Measurement;Memory management;Resource management;distributed load balancing;latency;work stealing},
	doi={10.1109/IPDPS.2014.74},
	ISSN={1530-2075},
	month={May},
}

@INPROCEEDINGS{Seung-Jai2011,
	author = "Seung jai Min, Costin Iancu and Katherine Yelick",
	title = {Hierarchical Work Stealing on Manycore Clusters},
	booktitle = {In: Fifth Conference on Partitioned Global Address Space Programming Models. Galveston Island},
	year = {2011}
}

@article{JeanLouisRoch2006,
	title={Adaptive algorithms: theory and application},
	author={Cung, Van-Dat and Dumas, Jean-Guillaume and Gautier, Thierry and Huard, Guillaume and Raffin, Bruno and Rapine, Christophe and Roch, Jean-Louis and Trystram, Denis},
	journal={SIAM PP},
	volume={6},
	pages={49--50},
    year = {2006}
}

@inproceedings{Hoefler2011,
	author = {Hoefler, Torsten and Snir, Marc},
	title = {Generic Topology Mapping Strategies for Large-scale Parallel Architectures},
	booktitle = {Proceedings of the International Conference on Supercomputing},
	series = {ICS '11},
	year = {2011},
	isbn = {978-1-4503-0102-2},
	location = {Tucson, Arizona, USA},
	pages = {75--84},
	numpages = {10},
	url = {http://doi.acm.org/10.1145/1995896.1995909},
	doi = {10.1145/1995896.1995909},
	acmid = {1995909},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {mpi graph topologies, topology mapping},
} 


@article{Bhatele2008,
	author = {Bhatelé, Abhinav and Kalé, Laxmikant V.},
	title = {Benefits of Topology Aware Mapping for Mesh Interconnects},
	journal = {Parallel Processing Letters},
	volume = {18},
	number = {04},
	pages = {549-566},
	year = {2008},
	doi = {10.1142/S0129626408003569},
	URL = {http://www.worldscientific.com/doi/abs/10.1142/S0129626408003569},
	eprint = {http://www.worldscientific.com/doi/pdf/10.1142/S0129626408003569}
}

@inproceedings{Cheriere2016,
	title={Design and Evaluation of Topology-aware Scatter and AllGather Algorithms for Dragonfly Networks},
	author={Cheriere, Nathana{\"e}l and Dorier, Matthieu},
	booktitle={Supercomputing 2016},
	year={2016}
}

@inproceedings{Dinan2009,
	author = {Dinan, James and Larkins, D. Brian and Sadayappan, P. and Krishnamoorthy, Sriram and Nieplocha, Jarek},
	title = {Scalable Work Stealing},
	booktitle = {Proceedings of the Conference on High Performance Computing Networking, Storage and Analysis},
	series = {SC '09},
	year = {2009},
	isbn = {978-1-60558-744-8},
	location = {Portland, Oregon},
	pages = {53:1--53:11},
	articleno = {53},
	numpages = {11},
	url = {http://doi.acm.org/10.1145/1654059.1654113},
	doi = {10.1145/1654059.1654113},
	acmid = {1654113},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {ARMCI, PGAS, dynamic load balancing, global arrays, task pools, work stealing},
} 

@INPROCEEDINGS{Gue2010,
	author={Y. Guo and J. Zhao and V. Cave and V. Sarkar},
	booktitle={2010 IEEE International Symposium on Parallel Distributed Processing (IPDPS)},
	title={SLAW: A scalable locality-aware adaptive work-stealing scheduler},
	year={2010},
	pages={1-12},
	keywords={mobile computing;parallel programming;scheduling;SLAW scheduler;bounded stack usage;fixed task scheduling policy;help-first policies;locality-oblivious scheduling;programming models;recursive parallel computations;scalable locality-aware adaptive work-stealing scheduler;temporal data reuse;work-first policies;Adaptive scheduling;Computer science;Concurrent computing;Dynamic scheduling;Java;Parallel processing;Processor scheduling;Programming profession;Runtime library;Scheduling algorithm;Adaptive Scheduling;Locality-aware Scheduling;Task Parallelism;Work-stealing},
	doi={10.1109/IPDPS.2010.5470425},
	ISSN={1530-2075},
	month={April},
	
}

@article{durrett1996probability,

      title={Probability: theory and examples},

        author={Durrett, Richard},

          year={1996},

            publisher={Duxbury Press}

}


@inproceedings{Saraswat2011,
    author = {Saraswat, Vijay A. and Kambadur, Prabhanjan and Kodali, Sreedhar and Grove, David and Krishnamoorthy, Sriram},
    title = {Lifeline-based Global Load Balancing},
    booktitle = {Proceedings of the 16th ACM Symposium on Principles and Practice of Parallel Programming},
    series = {PPoPP '11},
    year = {2011},
    isbn = {978-1-4503-0119-0},
    location = {San Antonio, TX, USA},
    pages = {201--212},
    numpages = {12},
    url = {http://doi.acm.org/10.1145/1941553.1941582},
    doi = {10.1145/1941553.1941582},
    acmid = {1941582},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {distributed work-stealing, global load balancing, uts, x10},
} 


@Article{Yang2017,
    author="Yang, Jixiang
        and He, Qingbi",
    title="Scheduling Parallel Computations by Work Stealing: A Survey",
    journal="International Journal of Parallel Programming",
    year="2017",
    pages="1--25",
    abstract="Work stealing has been proven to be an efficient technique for scheduling parallel computations, and has been gaining popularity as the multiprocessor/multicore-processor load balancing technology of choice in both industry and academia. A review on the work stealing scheduling is provided from the perspective of scheduling algorithms, optimization of algorithm implementation and processor architecture oriented optimization. The future research trends and recommendations driven by theory, emerging applications and motifs, architecture and heterogeneous platforms are also provided.",
    issn="1573-7640",
    doi="10.1007/s10766-016-0484-8",
    url="http://dx.doi.org/10.1007/s10766-016-0484-8"
}

@article{Arafat2016,
    author = {Arafat, Humayun and Dinan, James and Krishnamoorthy, Sriram and Balaji, Pavan and Sadayappan, P.},
    title = {Work Stealing for GPU-accelerated Parallel Programs in a Global Address Space Framework},
    journal = {Concurr. Comput. : Pract. Exper.},
    issue_date = {September 2016},
    volume = {28},
    number = {13},
    month = sep,
    year = {2016},
    issn = {1532-0626},
    pages = {3637--3654},
    numpages = {18},
    url = {https://doi.org/10.1002/cpe.3747},
    doi = {10.1002/cpe.3747},
    acmid = {3072164},
    publisher = {John Wiley and Sons Ltd.},
    address = {Chichester, UK},
    keywords = {GPU, partitioned global address space, task parallelism},
} 

@Article{Acar2002,
author="Acar, Umut A.
and Blelloch, Guy E.
and Blumofe, Robert D.",
title="The Data Locality of Work Stealing",
journal="Theory of Computing Systems",
year="2002",
month="Jun",
day="01",
volume="35",
number="3",
pages="321--347",
abstract="This paper studies the data locality of the work-stealing scheduling algorithm on hardware-controlled shared-memory machines, where movement of data to and from the cache is solely controlled by the hardware. We present lower and upper bounds on the number of cache misses when using work stealing, and introduce a locality-guided work-stealing algorithm and its experimental validation.",
issn="1433-0490",
doi="10.1007/s00224-002-1057-3",
url="https://doi.org/10.1007/s00224-002-1057-3"
}


@inproceedings{Acar2000,
 author = "Acar, Umut A. and Blelloch, Guy E. and Blumofe, Robert D.",
 title = "The Data Locality of Work Stealing",
 booktitle = "Proceedings of the Twelfth Annual ACM Symposium on Parallel Algorithms and Architectures",
 series = "SPAA '00",
 year = "2000",
 isbn = "1-58113-185-2",
 location = "Bar Harbor, Maine, USA",
 pages = "1--12",
 numpages = "12",
 url = "http://doi.acm.org/10.1145/341800.341801",
 doi = "10.1145/341800.341801",
 acmid = "341801",
 publisher = "ACM",
 address = "New York, NY, USA",
} 


@article{merkel2014docker,
  title={Docker: lightweight linux containers for consistent development and deployment},
  author={Merkel, Dirk},
  journal={Linux journal},
  volume={2014},
  number={239},
  pages={2},
  year={2014}
}

@inproceedings{sharma2016containers,
  title={Containers and virtual machines at scale: A comparative study},
  author={Sharma, Prateek and Chaufournier, Lucas and Shenoy, Prashant and Tay, YC},
  booktitle={Proceedings of the 17th International Middleware Conference},
  pages={1--13},
  year={2016}
}


@ARTICLE{docker,
author={C. {Anderson}},
journal={IEEE Software},
title={Docker [Software engineering]},
year={2015},
volume={32},
number={3},
pages={102-c3},
keywords={Interviews;Virtual machining;Software engineering;Software development;Docker;SE Radio;Software Engineering Radio;James Turnbull;microservices;Docker containers},
doi={10.1109/MS.2015.62},
ISSN={0740-7459},
month={May},}


@INPROCEEDINGS{OpenVZ,
author={J. {Che} and C. {Shi} and Y. {Yu} and W. {Lin}}, booktitle={2010 IEEE Asia-Pacific Services Computing Conference}, title={A Synthetical Performance Evaluation of OpenVZ, Xen and KVM}, year={2010}, volume={}, number={}, pages={587-594},}

@inproceedings{amaral2015performance,
  title={Performance evaluation of microservices architectures using containers},
  author={Amaral, Marcelo and Polo, Jorda and Carrera, David and Mohomed, Iqbal and Unuvar, Merve and Steinder, Malgorzata},
  booktitle={2015 IEEE 14th International Symposium on Network Computing and Applications},
  pages={27--34},
  year={2015},
  organization={IEEE}
}
